#!/usr/bin/env bash

: "${BUILDKIT_VERSION=}"
: "${CACHE_FROM=}"
: "${CACHE_TO=}"

set -e

dockerCmd() {
  (set -x ; docker "$@")
}

cacheFromFlag=""
cacheToFlag=""
if [ -n "$CACHE_FROM" ]; then
  cacheFromFlag="--cache-from=$CACHE_FROM"
fi
if [ -n "$CACHE_TO" ]; then
  cacheToFlag="--cache-to=$CACHE_TO"
fi

if [ -z "$BUILDKIT_VERSION" ]; then
  # resolve BuildKit version from go.mod if not provided
  BUILDKIT_VERSION=$(go list -mod=mod -u -m -f '{{.Version}}' github.com/moby/buildkit)
  if [[ "${BUILDKIT_VERSION}" == *-*-* ]]; then
    # if pseudo-version, figure out just the uncommon sha (https://github.com/golang/go/issues/34745)
    BUILDKIT_VERSION=$(echo "${BUILDKIT_VERSION}" | awk -F"-" '{print $NF}' | awk 'BEGIN{FIELDWIDTHS="7"} {print $1}')
    # use github api to return full sha to be able to use it as ref for git remote context
    BUILDKIT_VERSION=$(curl -s "https://api.github.com/repos/moby/buildkit/commits/${BUILDKIT_VERSION}" | jq -r .sha)
  fi
fi

buildkitRef="https://github.com/moby/buildkit.git#${BUILDKIT_VERSION}"
